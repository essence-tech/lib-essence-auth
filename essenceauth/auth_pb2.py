# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='auth.proto',
  package='essenceauth',
  syntax='proto3',
  serialized_pb=_b('\n\nauth.proto\x12\x0b\x65ssenceauth\x1a\x1cgoogle/api/annotations.proto\"\x07\n\x05\x45mpty\",\n\x0cLoginRequest\x12\n\n\x02ID\x18\x01 \x01(\t\x12\x10\n\x08Password\x18\x02 \x01(\t\"F\n\tUserLogin\x12\r\n\x05\x45mail\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0f\n\x07Picture\x18\x03 \x01(\t\x12\x0b\n\x03JWT\x18\x04 \x01(\t\"Z\n\x03\x41pp\x12\n\n\x02ID\x18\x01 \x01(\t\x12\x0b\n\x03Key\x18\x02 \x01(\t\x12\x0c\n\x04Name\x18\x03 \x01(\t\x12,\n\x0bPermissions\x18\x04 \x03(\x0b\x32\x17.essenceauth.Permission\")\n\x07\x41ppList\x12\x1e\n\x04\x41pps\x18\x01 \x03(\x0b\x32\x10.essenceauth.App\"6\n\tAppChange\x12\n\n\x02ID\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0f\n\x07Members\x18\x03 \x03(\t\"7\n\x0e\x41ppUserRequest\x12\n\n\x02ID\x18\x01 \x01(\t\x12\x0c\n\x04Keys\x18\x02 \x03(\t\x12\x0b\n\x03JWT\x18\x03 \x01(\t\"0\n\nMembership\x12\x0f\n\x07Members\x18\x01 \x03(\t\x12\x11\n\tOutsiders\x18\x02 \x03(\t\"^\n\x05Group\x12\n\n\x02ID\x18\x01 \x01(\x05\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0c\n\x04\x41uto\x18\x03 \x01(\x08\x12\r\n\x05Owner\x18\x04 \x01(\t\x12\x1e\n\x04\x41pps\x18\x05 \x03(\x0b\x32\x10.essenceauth.App\"/\n\tGroupList\x12\"\n\x06Groups\x18\x01 \x03(\x0b\x32\x12.essenceauth.Group\"f\n\x0bGroupChange\x12\n\n\x02ID\x18\x01 \x01(\x05\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0c\n\x04\x41uto\x18\x03 \x01(\x08\x12\x0f\n\x07Members\x18\x04 \x03(\t\x12\x1e\n\x04\x41pps\x18\x05 \x03(\x0b\x32\x10.essenceauth.App\"T\n\nPermission\x12\n\n\x02ID\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12,\n\x06Values\x18\x03 \x03(\x0b\x32\x1c.essenceauth.PermissionValue\"-\n\x0fPermissionValue\x12\x0b\n\x03Key\x18\x01 \x01(\t\x12\r\n\x05Value\x18\x02 \x01(\t\"c\n\x04User\x12\r\n\x05\x45mail\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0f\n\x07Picture\x18\x03 \x01(\t\x12\r\n\x05\x41\x64min\x18\x04 \x01(\x08\x12\x1e\n\x04\x41pps\x18\x05 \x03(\x0b\x32\x10.essenceauth.App\",\n\x08UserList\x12 \n\x05Users\x18\x01 \x03(\x0b\x32\x11.essenceauth.User\";\n\nUserChange\x12\r\n\x05\x45mail\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x10\n\x08Password\x18\x03 \x01(\t2\xe8\x0e\n\x0b\x45ssenceAuth\x12T\n\x05Login\x12\x19.essenceauth.LoginRequest\x1a\x16.essenceauth.UserLogin\"\x18\x82\xd3\xe4\x93\x02\x12\"\r/api/v2/login:\x01*\x12U\n\nAppGetUser\x12\x1b.essenceauth.AppUserRequest\x1a\x11.essenceauth.User\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0c/api/v2/user:\x01*\x12J\n\tAppGetApp\x12\x10.essenceauth.App\x1a\x10.essenceauth.App\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/api/v2/apps/{ID}\x12P\n\x0c\x41ppUpdateApp\x12\x10.essenceauth.App\x1a\x10.essenceauth.App\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x11/api/v2/apps/{ID}:\x01*\x12L\n\x08ListApps\x12\x12.essenceauth.Empty\x1a\x14.essenceauth.AppList\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v2/a/apps\x12I\n\x06GetApp\x12\x10.essenceauth.App\x1a\x10.essenceauth.App\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/api/v2/a/apps/{ID}\x12J\n\tCreateApp\x12\x10.essenceauth.App\x1a\x10.essenceauth.App\"\x19\x82\xd3\xe4\x93\x02\x13\"\x0e/api/v2/a/apps:\x01*\x12R\n\x06PutApp\x12\x16.essenceauth.AppChange\x1a\x10.essenceauth.App\"\x1e\x82\xd3\xe4\x93\x02\x18\x1a\x13/api/v2/a/apps/{ID}:\x01*\x12N\n\tDeleteApp\x12\x10.essenceauth.App\x1a\x12.essenceauth.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/api/v2/a/apps/{ID}\x12_\n\rGetAppMembers\x12\x10.essenceauth.App\x1a\x17.essenceauth.Membership\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v2/a/apps/{ID}/members\x12R\n\nListGroups\x12\x12.essenceauth.Empty\x1a\x16.essenceauth.GroupList\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/api/v2/a/groups\x12Q\n\x08GetGroup\x12\x12.essenceauth.Group\x1a\x12.essenceauth.Group\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v2/a/groups/{ID}\x12R\n\x0b\x43reateGroup\x12\x12.essenceauth.Group\x1a\x12.essenceauth.Group\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x10/api/v2/a/groups:\x01*\x12Z\n\x08PutGroup\x12\x18.essenceauth.GroupChange\x1a\x12.essenceauth.Group\" \x82\xd3\xe4\x93\x02\x1a\x1a\x15/api/v2/a/groups/{ID}:\x01*\x12T\n\x0b\x44\x65leteGroup\x12\x12.essenceauth.Group\x1a\x12.essenceauth.Empty\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/api/v2/a/groups/{ID}\x12\x65\n\x0fGetGroupMembers\x12\x12.essenceauth.Group\x1a\x17.essenceauth.Membership\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v2/a/groups/{ID}/members\x12O\n\tListUsers\x12\x12.essenceauth.Empty\x1a\x15.essenceauth.UserList\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/v2/a/users\x12P\n\x07GetUser\x12\x11.essenceauth.User\x1a\x11.essenceauth.User\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v2/a/users/{Email}\x12T\n\nCreateUser\x12\x17.essenceauth.UserChange\x1a\x11.essenceauth.User\"\x1a\x82\xd3\xe4\x93\x02\x14\"\x0f/api/v2/a/users:\x01*\x12Y\n\x07PutUser\x12\x17.essenceauth.UserChange\x1a\x11.essenceauth.User\"\"\x82\xd3\xe4\x93\x02\x1c\x1a\x17/api/v2/a/users/{Email}:\x01*\x12T\n\nDeleteUser\x12\x11.essenceauth.User\x1a\x12.essenceauth.Empty\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/api/v2/a/users/{Email}\x12\x66\n\x11ResetUserPassword\x12\x11.essenceauth.User\x1a\x17.essenceauth.UserChange\"%\x82\xd3\xe4\x93\x02\x1f\"\x1d/api/v2/a/users/{Email}/resetb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='essenceauth.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=64,
)


_LOGINREQUEST = _descriptor.Descriptor(
  name='LoginRequest',
  full_name='essenceauth.LoginRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.LoginRequest.ID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Password', full_name='essenceauth.LoginRequest.Password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=66,
  serialized_end=110,
)


_USERLOGIN = _descriptor.Descriptor(
  name='UserLogin',
  full_name='essenceauth.UserLogin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Email', full_name='essenceauth.UserLogin.Email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.UserLogin.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Picture', full_name='essenceauth.UserLogin.Picture', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='JWT', full_name='essenceauth.UserLogin.JWT', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=182,
)


_APP = _descriptor.Descriptor(
  name='App',
  full_name='essenceauth.App',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.App.ID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Key', full_name='essenceauth.App.Key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.App.Name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Permissions', full_name='essenceauth.App.Permissions', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=274,
)


_APPLIST = _descriptor.Descriptor(
  name='AppList',
  full_name='essenceauth.AppList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Apps', full_name='essenceauth.AppList.Apps', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=317,
)


_APPCHANGE = _descriptor.Descriptor(
  name='AppChange',
  full_name='essenceauth.AppChange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.AppChange.ID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.AppChange.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Members', full_name='essenceauth.AppChange.Members', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=319,
  serialized_end=373,
)


_APPUSERREQUEST = _descriptor.Descriptor(
  name='AppUserRequest',
  full_name='essenceauth.AppUserRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.AppUserRequest.ID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Keys', full_name='essenceauth.AppUserRequest.Keys', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='JWT', full_name='essenceauth.AppUserRequest.JWT', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=430,
)


_MEMBERSHIP = _descriptor.Descriptor(
  name='Membership',
  full_name='essenceauth.Membership',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Members', full_name='essenceauth.Membership.Members', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Outsiders', full_name='essenceauth.Membership.Outsiders', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=432,
  serialized_end=480,
)


_GROUP = _descriptor.Descriptor(
  name='Group',
  full_name='essenceauth.Group',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.Group.ID', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.Group.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Auto', full_name='essenceauth.Group.Auto', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Owner', full_name='essenceauth.Group.Owner', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Apps', full_name='essenceauth.Group.Apps', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=482,
  serialized_end=576,
)


_GROUPLIST = _descriptor.Descriptor(
  name='GroupList',
  full_name='essenceauth.GroupList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Groups', full_name='essenceauth.GroupList.Groups', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=578,
  serialized_end=625,
)


_GROUPCHANGE = _descriptor.Descriptor(
  name='GroupChange',
  full_name='essenceauth.GroupChange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.GroupChange.ID', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.GroupChange.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Auto', full_name='essenceauth.GroupChange.Auto', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Members', full_name='essenceauth.GroupChange.Members', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Apps', full_name='essenceauth.GroupChange.Apps', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=627,
  serialized_end=729,
)


_PERMISSION = _descriptor.Descriptor(
  name='Permission',
  full_name='essenceauth.Permission',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='essenceauth.Permission.ID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.Permission.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Values', full_name='essenceauth.Permission.Values', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=731,
  serialized_end=815,
)


_PERMISSIONVALUE = _descriptor.Descriptor(
  name='PermissionValue',
  full_name='essenceauth.PermissionValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Key', full_name='essenceauth.PermissionValue.Key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Value', full_name='essenceauth.PermissionValue.Value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=817,
  serialized_end=862,
)


_USER = _descriptor.Descriptor(
  name='User',
  full_name='essenceauth.User',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Email', full_name='essenceauth.User.Email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.User.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Picture', full_name='essenceauth.User.Picture', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Admin', full_name='essenceauth.User.Admin', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Apps', full_name='essenceauth.User.Apps', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=864,
  serialized_end=963,
)


_USERLIST = _descriptor.Descriptor(
  name='UserList',
  full_name='essenceauth.UserList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Users', full_name='essenceauth.UserList.Users', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=965,
  serialized_end=1009,
)


_USERCHANGE = _descriptor.Descriptor(
  name='UserChange',
  full_name='essenceauth.UserChange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Email', full_name='essenceauth.UserChange.Email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='essenceauth.UserChange.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Password', full_name='essenceauth.UserChange.Password', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1011,
  serialized_end=1070,
)

_APP.fields_by_name['Permissions'].message_type = _PERMISSION
_APPLIST.fields_by_name['Apps'].message_type = _APP
_GROUP.fields_by_name['Apps'].message_type = _APP
_GROUPLIST.fields_by_name['Groups'].message_type = _GROUP
_GROUPCHANGE.fields_by_name['Apps'].message_type = _APP
_PERMISSION.fields_by_name['Values'].message_type = _PERMISSIONVALUE
_USER.fields_by_name['Apps'].message_type = _APP
_USERLIST.fields_by_name['Users'].message_type = _USER
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['LoginRequest'] = _LOGINREQUEST
DESCRIPTOR.message_types_by_name['UserLogin'] = _USERLOGIN
DESCRIPTOR.message_types_by_name['App'] = _APP
DESCRIPTOR.message_types_by_name['AppList'] = _APPLIST
DESCRIPTOR.message_types_by_name['AppChange'] = _APPCHANGE
DESCRIPTOR.message_types_by_name['AppUserRequest'] = _APPUSERREQUEST
DESCRIPTOR.message_types_by_name['Membership'] = _MEMBERSHIP
DESCRIPTOR.message_types_by_name['Group'] = _GROUP
DESCRIPTOR.message_types_by_name['GroupList'] = _GROUPLIST
DESCRIPTOR.message_types_by_name['GroupChange'] = _GROUPCHANGE
DESCRIPTOR.message_types_by_name['Permission'] = _PERMISSION
DESCRIPTOR.message_types_by_name['PermissionValue'] = _PERMISSIONVALUE
DESCRIPTOR.message_types_by_name['User'] = _USER
DESCRIPTOR.message_types_by_name['UserList'] = _USERLIST
DESCRIPTOR.message_types_by_name['UserChange'] = _USERCHANGE

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.Empty)
  ))
_sym_db.RegisterMessage(Empty)

LoginRequest = _reflection.GeneratedProtocolMessageType('LoginRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOGINREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.LoginRequest)
  ))
_sym_db.RegisterMessage(LoginRequest)

UserLogin = _reflection.GeneratedProtocolMessageType('UserLogin', (_message.Message,), dict(
  DESCRIPTOR = _USERLOGIN,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.UserLogin)
  ))
_sym_db.RegisterMessage(UserLogin)

App = _reflection.GeneratedProtocolMessageType('App', (_message.Message,), dict(
  DESCRIPTOR = _APP,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.App)
  ))
_sym_db.RegisterMessage(App)

AppList = _reflection.GeneratedProtocolMessageType('AppList', (_message.Message,), dict(
  DESCRIPTOR = _APPLIST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.AppList)
  ))
_sym_db.RegisterMessage(AppList)

AppChange = _reflection.GeneratedProtocolMessageType('AppChange', (_message.Message,), dict(
  DESCRIPTOR = _APPCHANGE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.AppChange)
  ))
_sym_db.RegisterMessage(AppChange)

AppUserRequest = _reflection.GeneratedProtocolMessageType('AppUserRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPUSERREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.AppUserRequest)
  ))
_sym_db.RegisterMessage(AppUserRequest)

Membership = _reflection.GeneratedProtocolMessageType('Membership', (_message.Message,), dict(
  DESCRIPTOR = _MEMBERSHIP,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.Membership)
  ))
_sym_db.RegisterMessage(Membership)

Group = _reflection.GeneratedProtocolMessageType('Group', (_message.Message,), dict(
  DESCRIPTOR = _GROUP,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.Group)
  ))
_sym_db.RegisterMessage(Group)

GroupList = _reflection.GeneratedProtocolMessageType('GroupList', (_message.Message,), dict(
  DESCRIPTOR = _GROUPLIST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.GroupList)
  ))
_sym_db.RegisterMessage(GroupList)

GroupChange = _reflection.GeneratedProtocolMessageType('GroupChange', (_message.Message,), dict(
  DESCRIPTOR = _GROUPCHANGE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.GroupChange)
  ))
_sym_db.RegisterMessage(GroupChange)

Permission = _reflection.GeneratedProtocolMessageType('Permission', (_message.Message,), dict(
  DESCRIPTOR = _PERMISSION,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.Permission)
  ))
_sym_db.RegisterMessage(Permission)

PermissionValue = _reflection.GeneratedProtocolMessageType('PermissionValue', (_message.Message,), dict(
  DESCRIPTOR = _PERMISSIONVALUE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.PermissionValue)
  ))
_sym_db.RegisterMessage(PermissionValue)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), dict(
  DESCRIPTOR = _USER,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.User)
  ))
_sym_db.RegisterMessage(User)

UserList = _reflection.GeneratedProtocolMessageType('UserList', (_message.Message,), dict(
  DESCRIPTOR = _USERLIST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.UserList)
  ))
_sym_db.RegisterMessage(UserList)

UserChange = _reflection.GeneratedProtocolMessageType('UserChange', (_message.Message,), dict(
  DESCRIPTOR = _USERCHANGE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:essenceauth.UserChange)
  ))
_sym_db.RegisterMessage(UserChange)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class EssenceAuthStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Login = channel.unary_unary(
          '/essenceauth.EssenceAuth/Login',
          request_serializer=LoginRequest.SerializeToString,
          response_deserializer=UserLogin.FromString,
          )
      self.AppGetUser = channel.unary_unary(
          '/essenceauth.EssenceAuth/AppGetUser',
          request_serializer=AppUserRequest.SerializeToString,
          response_deserializer=User.FromString,
          )
      self.AppGetApp = channel.unary_unary(
          '/essenceauth.EssenceAuth/AppGetApp',
          request_serializer=App.SerializeToString,
          response_deserializer=App.FromString,
          )
      self.AppUpdateApp = channel.unary_unary(
          '/essenceauth.EssenceAuth/AppUpdateApp',
          request_serializer=App.SerializeToString,
          response_deserializer=App.FromString,
          )
      self.ListApps = channel.unary_unary(
          '/essenceauth.EssenceAuth/ListApps',
          request_serializer=Empty.SerializeToString,
          response_deserializer=AppList.FromString,
          )
      self.GetApp = channel.unary_unary(
          '/essenceauth.EssenceAuth/GetApp',
          request_serializer=App.SerializeToString,
          response_deserializer=App.FromString,
          )
      self.CreateApp = channel.unary_unary(
          '/essenceauth.EssenceAuth/CreateApp',
          request_serializer=App.SerializeToString,
          response_deserializer=App.FromString,
          )
      self.PutApp = channel.unary_unary(
          '/essenceauth.EssenceAuth/PutApp',
          request_serializer=AppChange.SerializeToString,
          response_deserializer=App.FromString,
          )
      self.DeleteApp = channel.unary_unary(
          '/essenceauth.EssenceAuth/DeleteApp',
          request_serializer=App.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.GetAppMembers = channel.unary_unary(
          '/essenceauth.EssenceAuth/GetAppMembers',
          request_serializer=App.SerializeToString,
          response_deserializer=Membership.FromString,
          )
      self.ListGroups = channel.unary_unary(
          '/essenceauth.EssenceAuth/ListGroups',
          request_serializer=Empty.SerializeToString,
          response_deserializer=GroupList.FromString,
          )
      self.GetGroup = channel.unary_unary(
          '/essenceauth.EssenceAuth/GetGroup',
          request_serializer=Group.SerializeToString,
          response_deserializer=Group.FromString,
          )
      self.CreateGroup = channel.unary_unary(
          '/essenceauth.EssenceAuth/CreateGroup',
          request_serializer=Group.SerializeToString,
          response_deserializer=Group.FromString,
          )
      self.PutGroup = channel.unary_unary(
          '/essenceauth.EssenceAuth/PutGroup',
          request_serializer=GroupChange.SerializeToString,
          response_deserializer=Group.FromString,
          )
      self.DeleteGroup = channel.unary_unary(
          '/essenceauth.EssenceAuth/DeleteGroup',
          request_serializer=Group.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.GetGroupMembers = channel.unary_unary(
          '/essenceauth.EssenceAuth/GetGroupMembers',
          request_serializer=Group.SerializeToString,
          response_deserializer=Membership.FromString,
          )
      self.ListUsers = channel.unary_unary(
          '/essenceauth.EssenceAuth/ListUsers',
          request_serializer=Empty.SerializeToString,
          response_deserializer=UserList.FromString,
          )
      self.GetUser = channel.unary_unary(
          '/essenceauth.EssenceAuth/GetUser',
          request_serializer=User.SerializeToString,
          response_deserializer=User.FromString,
          )
      self.CreateUser = channel.unary_unary(
          '/essenceauth.EssenceAuth/CreateUser',
          request_serializer=UserChange.SerializeToString,
          response_deserializer=User.FromString,
          )
      self.PutUser = channel.unary_unary(
          '/essenceauth.EssenceAuth/PutUser',
          request_serializer=UserChange.SerializeToString,
          response_deserializer=User.FromString,
          )
      self.DeleteUser = channel.unary_unary(
          '/essenceauth.EssenceAuth/DeleteUser',
          request_serializer=User.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.ResetUserPassword = channel.unary_unary(
          '/essenceauth.EssenceAuth/ResetUserPassword',
          request_serializer=User.SerializeToString,
          response_deserializer=UserChange.FromString,
          )


  class EssenceAuthServicer(object):

    def Login(self, request, context):
      """Login.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AppGetUser(self, request, context):
      """Application endpoints. These are for applications to perform requests related to
      themselves.

      Used by an application to fetch information about a user using their JWT.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AppGetApp(self, request, context):
      """An application can get info about itself.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AppUpdateApp(self, request, context):
      """Allows an application to provide information about its available permissions.
      Those permissions can then be given to groups and therefore users.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListApps(self, request, context):
      """Service administration endpoints. These require a user JWT to be provided as a GRPC metadata
      key, "authorization". If using REST this can be provided with the header "Grpc-Metadata-Authorization".


      Applications


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetApp(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateApp(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PutApp(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteApp(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAppMembers(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListGroups(self, request, context):
      """
      Groups


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetGroup(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateGroup(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PutGroup(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteGroup(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetGroupMembers(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
      """
      Users


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PutUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ResetUserPassword(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_EssenceAuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Login': grpc.unary_unary_rpc_method_handler(
            servicer.Login,
            request_deserializer=LoginRequest.FromString,
            response_serializer=UserLogin.SerializeToString,
        ),
        'AppGetUser': grpc.unary_unary_rpc_method_handler(
            servicer.AppGetUser,
            request_deserializer=AppUserRequest.FromString,
            response_serializer=User.SerializeToString,
        ),
        'AppGetApp': grpc.unary_unary_rpc_method_handler(
            servicer.AppGetApp,
            request_deserializer=App.FromString,
            response_serializer=App.SerializeToString,
        ),
        'AppUpdateApp': grpc.unary_unary_rpc_method_handler(
            servicer.AppUpdateApp,
            request_deserializer=App.FromString,
            response_serializer=App.SerializeToString,
        ),
        'ListApps': grpc.unary_unary_rpc_method_handler(
            servicer.ListApps,
            request_deserializer=Empty.FromString,
            response_serializer=AppList.SerializeToString,
        ),
        'GetApp': grpc.unary_unary_rpc_method_handler(
            servicer.GetApp,
            request_deserializer=App.FromString,
            response_serializer=App.SerializeToString,
        ),
        'CreateApp': grpc.unary_unary_rpc_method_handler(
            servicer.CreateApp,
            request_deserializer=App.FromString,
            response_serializer=App.SerializeToString,
        ),
        'PutApp': grpc.unary_unary_rpc_method_handler(
            servicer.PutApp,
            request_deserializer=AppChange.FromString,
            response_serializer=App.SerializeToString,
        ),
        'DeleteApp': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteApp,
            request_deserializer=App.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'GetAppMembers': grpc.unary_unary_rpc_method_handler(
            servicer.GetAppMembers,
            request_deserializer=App.FromString,
            response_serializer=Membership.SerializeToString,
        ),
        'ListGroups': grpc.unary_unary_rpc_method_handler(
            servicer.ListGroups,
            request_deserializer=Empty.FromString,
            response_serializer=GroupList.SerializeToString,
        ),
        'GetGroup': grpc.unary_unary_rpc_method_handler(
            servicer.GetGroup,
            request_deserializer=Group.FromString,
            response_serializer=Group.SerializeToString,
        ),
        'CreateGroup': grpc.unary_unary_rpc_method_handler(
            servicer.CreateGroup,
            request_deserializer=Group.FromString,
            response_serializer=Group.SerializeToString,
        ),
        'PutGroup': grpc.unary_unary_rpc_method_handler(
            servicer.PutGroup,
            request_deserializer=GroupChange.FromString,
            response_serializer=Group.SerializeToString,
        ),
        'DeleteGroup': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteGroup,
            request_deserializer=Group.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'GetGroupMembers': grpc.unary_unary_rpc_method_handler(
            servicer.GetGroupMembers,
            request_deserializer=Group.FromString,
            response_serializer=Membership.SerializeToString,
        ),
        'ListUsers': grpc.unary_unary_rpc_method_handler(
            servicer.ListUsers,
            request_deserializer=Empty.FromString,
            response_serializer=UserList.SerializeToString,
        ),
        'GetUser': grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=User.FromString,
            response_serializer=User.SerializeToString,
        ),
        'CreateUser': grpc.unary_unary_rpc_method_handler(
            servicer.CreateUser,
            request_deserializer=UserChange.FromString,
            response_serializer=User.SerializeToString,
        ),
        'PutUser': grpc.unary_unary_rpc_method_handler(
            servicer.PutUser,
            request_deserializer=UserChange.FromString,
            response_serializer=User.SerializeToString,
        ),
        'DeleteUser': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUser,
            request_deserializer=User.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'ResetUserPassword': grpc.unary_unary_rpc_method_handler(
            servicer.ResetUserPassword,
            request_deserializer=User.FromString,
            response_serializer=UserChange.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'essenceauth.EssenceAuth', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaEssenceAuthServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Login(self, request, context):
      """Login.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AppGetUser(self, request, context):
      """Application endpoints. These are for applications to perform requests related to
      themselves.

      Used by an application to fetch information about a user using their JWT.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AppGetApp(self, request, context):
      """An application can get info about itself.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AppUpdateApp(self, request, context):
      """Allows an application to provide information about its available permissions.
      Those permissions can then be given to groups and therefore users.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListApps(self, request, context):
      """Service administration endpoints. These require a user JWT to be provided as a GRPC metadata
      key, "authorization". If using REST this can be provided with the header "Grpc-Metadata-Authorization".


      Applications


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetApp(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateApp(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PutApp(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteApp(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAppMembers(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListGroups(self, request, context):
      """
      Groups


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetGroup(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateGroup(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PutGroup(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteGroup(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetGroupMembers(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListUsers(self, request, context):
      """
      Users


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PutUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteUser(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ResetUserPassword(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaEssenceAuthStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Login(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Login.
      """
      raise NotImplementedError()
    Login.future = None
    def AppGetUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Application endpoints. These are for applications to perform requests related to
      themselves.

      Used by an application to fetch information about a user using their JWT.
      """
      raise NotImplementedError()
    AppGetUser.future = None
    def AppGetApp(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """An application can get info about itself.
      """
      raise NotImplementedError()
    AppGetApp.future = None
    def AppUpdateApp(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Allows an application to provide information about its available permissions.
      Those permissions can then be given to groups and therefore users.
      """
      raise NotImplementedError()
    AppUpdateApp.future = None
    def ListApps(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Service administration endpoints. These require a user JWT to be provided as a GRPC metadata
      key, "authorization". If using REST this can be provided with the header "Grpc-Metadata-Authorization".


      Applications


      """
      raise NotImplementedError()
    ListApps.future = None
    def GetApp(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetApp.future = None
    def CreateApp(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CreateApp.future = None
    def PutApp(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    PutApp.future = None
    def DeleteApp(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DeleteApp.future = None
    def GetAppMembers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetAppMembers.future = None
    def ListGroups(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """
      Groups


      """
      raise NotImplementedError()
    ListGroups.future = None
    def GetGroup(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetGroup.future = None
    def CreateGroup(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CreateGroup.future = None
    def PutGroup(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    PutGroup.future = None
    def DeleteGroup(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DeleteGroup.future = None
    def GetGroupMembers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetGroupMembers.future = None
    def ListUsers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """
      Users


      """
      raise NotImplementedError()
    ListUsers.future = None
    def GetUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetUser.future = None
    def CreateUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CreateUser.future = None
    def PutUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    PutUser.future = None
    def DeleteUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DeleteUser.future = None
    def ResetUserPassword(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    ResetUserPassword.future = None


  def beta_create_EssenceAuth_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('essenceauth.EssenceAuth', 'AppGetApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'AppGetUser'): AppUserRequest.FromString,
      ('essenceauth.EssenceAuth', 'AppUpdateApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'CreateApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'CreateGroup'): Group.FromString,
      ('essenceauth.EssenceAuth', 'CreateUser'): UserChange.FromString,
      ('essenceauth.EssenceAuth', 'DeleteApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'DeleteGroup'): Group.FromString,
      ('essenceauth.EssenceAuth', 'DeleteUser'): User.FromString,
      ('essenceauth.EssenceAuth', 'GetApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'GetAppMembers'): App.FromString,
      ('essenceauth.EssenceAuth', 'GetGroup'): Group.FromString,
      ('essenceauth.EssenceAuth', 'GetGroupMembers'): Group.FromString,
      ('essenceauth.EssenceAuth', 'GetUser'): User.FromString,
      ('essenceauth.EssenceAuth', 'ListApps'): Empty.FromString,
      ('essenceauth.EssenceAuth', 'ListGroups'): Empty.FromString,
      ('essenceauth.EssenceAuth', 'ListUsers'): Empty.FromString,
      ('essenceauth.EssenceAuth', 'Login'): LoginRequest.FromString,
      ('essenceauth.EssenceAuth', 'PutApp'): AppChange.FromString,
      ('essenceauth.EssenceAuth', 'PutGroup'): GroupChange.FromString,
      ('essenceauth.EssenceAuth', 'PutUser'): UserChange.FromString,
      ('essenceauth.EssenceAuth', 'ResetUserPassword'): User.FromString,
    }
    response_serializers = {
      ('essenceauth.EssenceAuth', 'AppGetApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'AppGetUser'): User.SerializeToString,
      ('essenceauth.EssenceAuth', 'AppUpdateApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'CreateApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'CreateGroup'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'CreateUser'): User.SerializeToString,
      ('essenceauth.EssenceAuth', 'DeleteApp'): Empty.SerializeToString,
      ('essenceauth.EssenceAuth', 'DeleteGroup'): Empty.SerializeToString,
      ('essenceauth.EssenceAuth', 'DeleteUser'): Empty.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetAppMembers'): Membership.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetGroup'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetGroupMembers'): Membership.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetUser'): User.SerializeToString,
      ('essenceauth.EssenceAuth', 'ListApps'): AppList.SerializeToString,
      ('essenceauth.EssenceAuth', 'ListGroups'): GroupList.SerializeToString,
      ('essenceauth.EssenceAuth', 'ListUsers'): UserList.SerializeToString,
      ('essenceauth.EssenceAuth', 'Login'): UserLogin.SerializeToString,
      ('essenceauth.EssenceAuth', 'PutApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'PutGroup'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'PutUser'): User.SerializeToString,
      ('essenceauth.EssenceAuth', 'ResetUserPassword'): UserChange.SerializeToString,
    }
    method_implementations = {
      ('essenceauth.EssenceAuth', 'AppGetApp'): face_utilities.unary_unary_inline(servicer.AppGetApp),
      ('essenceauth.EssenceAuth', 'AppGetUser'): face_utilities.unary_unary_inline(servicer.AppGetUser),
      ('essenceauth.EssenceAuth', 'AppUpdateApp'): face_utilities.unary_unary_inline(servicer.AppUpdateApp),
      ('essenceauth.EssenceAuth', 'CreateApp'): face_utilities.unary_unary_inline(servicer.CreateApp),
      ('essenceauth.EssenceAuth', 'CreateGroup'): face_utilities.unary_unary_inline(servicer.CreateGroup),
      ('essenceauth.EssenceAuth', 'CreateUser'): face_utilities.unary_unary_inline(servicer.CreateUser),
      ('essenceauth.EssenceAuth', 'DeleteApp'): face_utilities.unary_unary_inline(servicer.DeleteApp),
      ('essenceauth.EssenceAuth', 'DeleteGroup'): face_utilities.unary_unary_inline(servicer.DeleteGroup),
      ('essenceauth.EssenceAuth', 'DeleteUser'): face_utilities.unary_unary_inline(servicer.DeleteUser),
      ('essenceauth.EssenceAuth', 'GetApp'): face_utilities.unary_unary_inline(servicer.GetApp),
      ('essenceauth.EssenceAuth', 'GetAppMembers'): face_utilities.unary_unary_inline(servicer.GetAppMembers),
      ('essenceauth.EssenceAuth', 'GetGroup'): face_utilities.unary_unary_inline(servicer.GetGroup),
      ('essenceauth.EssenceAuth', 'GetGroupMembers'): face_utilities.unary_unary_inline(servicer.GetGroupMembers),
      ('essenceauth.EssenceAuth', 'GetUser'): face_utilities.unary_unary_inline(servicer.GetUser),
      ('essenceauth.EssenceAuth', 'ListApps'): face_utilities.unary_unary_inline(servicer.ListApps),
      ('essenceauth.EssenceAuth', 'ListGroups'): face_utilities.unary_unary_inline(servicer.ListGroups),
      ('essenceauth.EssenceAuth', 'ListUsers'): face_utilities.unary_unary_inline(servicer.ListUsers),
      ('essenceauth.EssenceAuth', 'Login'): face_utilities.unary_unary_inline(servicer.Login),
      ('essenceauth.EssenceAuth', 'PutApp'): face_utilities.unary_unary_inline(servicer.PutApp),
      ('essenceauth.EssenceAuth', 'PutGroup'): face_utilities.unary_unary_inline(servicer.PutGroup),
      ('essenceauth.EssenceAuth', 'PutUser'): face_utilities.unary_unary_inline(servicer.PutUser),
      ('essenceauth.EssenceAuth', 'ResetUserPassword'): face_utilities.unary_unary_inline(servicer.ResetUserPassword),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_EssenceAuth_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('essenceauth.EssenceAuth', 'AppGetApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'AppGetUser'): AppUserRequest.SerializeToString,
      ('essenceauth.EssenceAuth', 'AppUpdateApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'CreateApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'CreateGroup'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'CreateUser'): UserChange.SerializeToString,
      ('essenceauth.EssenceAuth', 'DeleteApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'DeleteGroup'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'DeleteUser'): User.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetApp'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetAppMembers'): App.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetGroup'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetGroupMembers'): Group.SerializeToString,
      ('essenceauth.EssenceAuth', 'GetUser'): User.SerializeToString,
      ('essenceauth.EssenceAuth', 'ListApps'): Empty.SerializeToString,
      ('essenceauth.EssenceAuth', 'ListGroups'): Empty.SerializeToString,
      ('essenceauth.EssenceAuth', 'ListUsers'): Empty.SerializeToString,
      ('essenceauth.EssenceAuth', 'Login'): LoginRequest.SerializeToString,
      ('essenceauth.EssenceAuth', 'PutApp'): AppChange.SerializeToString,
      ('essenceauth.EssenceAuth', 'PutGroup'): GroupChange.SerializeToString,
      ('essenceauth.EssenceAuth', 'PutUser'): UserChange.SerializeToString,
      ('essenceauth.EssenceAuth', 'ResetUserPassword'): User.SerializeToString,
    }
    response_deserializers = {
      ('essenceauth.EssenceAuth', 'AppGetApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'AppGetUser'): User.FromString,
      ('essenceauth.EssenceAuth', 'AppUpdateApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'CreateApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'CreateGroup'): Group.FromString,
      ('essenceauth.EssenceAuth', 'CreateUser'): User.FromString,
      ('essenceauth.EssenceAuth', 'DeleteApp'): Empty.FromString,
      ('essenceauth.EssenceAuth', 'DeleteGroup'): Empty.FromString,
      ('essenceauth.EssenceAuth', 'DeleteUser'): Empty.FromString,
      ('essenceauth.EssenceAuth', 'GetApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'GetAppMembers'): Membership.FromString,
      ('essenceauth.EssenceAuth', 'GetGroup'): Group.FromString,
      ('essenceauth.EssenceAuth', 'GetGroupMembers'): Membership.FromString,
      ('essenceauth.EssenceAuth', 'GetUser'): User.FromString,
      ('essenceauth.EssenceAuth', 'ListApps'): AppList.FromString,
      ('essenceauth.EssenceAuth', 'ListGroups'): GroupList.FromString,
      ('essenceauth.EssenceAuth', 'ListUsers'): UserList.FromString,
      ('essenceauth.EssenceAuth', 'Login'): UserLogin.FromString,
      ('essenceauth.EssenceAuth', 'PutApp'): App.FromString,
      ('essenceauth.EssenceAuth', 'PutGroup'): Group.FromString,
      ('essenceauth.EssenceAuth', 'PutUser'): User.FromString,
      ('essenceauth.EssenceAuth', 'ResetUserPassword'): UserChange.FromString,
    }
    cardinalities = {
      'AppGetApp': cardinality.Cardinality.UNARY_UNARY,
      'AppGetUser': cardinality.Cardinality.UNARY_UNARY,
      'AppUpdateApp': cardinality.Cardinality.UNARY_UNARY,
      'CreateApp': cardinality.Cardinality.UNARY_UNARY,
      'CreateGroup': cardinality.Cardinality.UNARY_UNARY,
      'CreateUser': cardinality.Cardinality.UNARY_UNARY,
      'DeleteApp': cardinality.Cardinality.UNARY_UNARY,
      'DeleteGroup': cardinality.Cardinality.UNARY_UNARY,
      'DeleteUser': cardinality.Cardinality.UNARY_UNARY,
      'GetApp': cardinality.Cardinality.UNARY_UNARY,
      'GetAppMembers': cardinality.Cardinality.UNARY_UNARY,
      'GetGroup': cardinality.Cardinality.UNARY_UNARY,
      'GetGroupMembers': cardinality.Cardinality.UNARY_UNARY,
      'GetUser': cardinality.Cardinality.UNARY_UNARY,
      'ListApps': cardinality.Cardinality.UNARY_UNARY,
      'ListGroups': cardinality.Cardinality.UNARY_UNARY,
      'ListUsers': cardinality.Cardinality.UNARY_UNARY,
      'Login': cardinality.Cardinality.UNARY_UNARY,
      'PutApp': cardinality.Cardinality.UNARY_UNARY,
      'PutGroup': cardinality.Cardinality.UNARY_UNARY,
      'PutUser': cardinality.Cardinality.UNARY_UNARY,
      'ResetUserPassword': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'essenceauth.EssenceAuth', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
